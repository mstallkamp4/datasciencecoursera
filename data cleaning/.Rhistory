getwd()
setwd(c:\github)
setwd("c:\github\datasciencecoursera\datacleaning")
setwd("c:/github/datasciencecoursera/datacleaning")
setwd("c:/github/datasciencecoursera/")
setwd("c:/github/datasciencecoursera/data cleaning")
fileUrl <-"https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru"
fileUrl <-"https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru"
download.file(destfile"./data/cameras.csv")
download.file(destfile="./data/cameras.csv")
download.file(fileUrl, destfile="./data/cameras.csv")
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
list.files("./data")
fileUrl <-"https://data.baltimorecity.gov/Transportation/Baltimore-Fixed-Speed-Cameras/dz54-2aru"
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
fileUrl
fileUrl <-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
fileUrl
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
download.file(fileUrl)
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD")
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD", destile="./data/cameras.csv", method="curl")
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD", destfile="./data/cameras.csv", method="curl")
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD", destfile="./data/cameras.csv")
list.files("./data")
dateDownloaded <-date()
dateDownloaded
library(XML)
library(xml)
install.packages(xml)
install.packages(XML)
install.packages("XML")
library(xml)
library(XML)
fileUrl=<-"http://www.w3schools/xml/simple.xml"
fileUrl<-"http://www.w3schools/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
doc <- xmlTreeParse(http://www.w3schools/xml/simple.xml, useInternal=TRUE)
doc <- xmlTreeParse("http://www.w3schools/xml/simple.xml", useInternal=TRUE)
doc <- xmlTreeParse("https://www.w3schools.com/xml/simple.xml", useInternal=TRUE)
doc <- xmlTreeParse("https://www.w3schools.com/xml/cd_catalog.xml", useInternal=TRUE)
doc <- xmlTreeParse("./data/cd.xml", useInternal=TRUE)
doc
rootNode <-xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNote, xmlValue)
xmlSApply(rootNode, xmlValue)
rootNode
xpathSapply(rootNode, "//ARTIST", xmlValue())
xpathSApply(rootNode, "//ARTIST", xmlValue())
xpathSApply(rootNode, "//ARTIST", xmlValue)
fileUrl <"http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
fileUrl <-"http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternam=TRUE)
doc <- htmlTreeParse(fileUrl, useInternal=TRUE)
doc
scores <- xpathSapply(doc, "//li[@class='score']", xmlvalue)
scores <- xPathSapply(doc, "//li[@class='score']", xmlvalue)
scores <- xpathSApply(doc, "//li[@class='score']", xmlvalue)
scores <- xpathSApply(doc, "//li[@class='score']", xmlValue)
scores
doc
scores <- xpathSApply(doc, "//li[@class='active']", xmlValue)
scores
doc
head(doc)
install.packages(jsonlite)
install.packages("jsonlite")
library(jsonlite)
json <- fromJSON("https://api.gihub.com/users/tleek/repos")
json
json <- fromJSON("https://api.github.com/users/tleek/repos")
json
names(json$owner)
json$owner$login
iris
toJSON(iris, pretty=TRUE)
library(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
data <- data.frame(x=rnorm(9), y=rep(c("a","b", "c", each=3)), z=rnorm(9))
data <- data.frame(x=rnorm(9), y=rep(c("a","b", "c"), each=3), z=rnorm(9))
tables()
datatable <- data.table(x=rnorm(9), y=rep(c("a","b", "c"), each=3), z=rnorm(9))
datatable <- data.table(x=rnorm(9), y=rep(c("a","b", "c"), each=3), z=rnorm(9))
tables()
datatable[2,]
datatable[,2]
datatable$y=="a"
datatable[datatable$y=="a"]
datatable[ , c(2,3)]
head (datatable,3)
datatable[datatable$y=="a"]
datatable[datatable$y=="a"]
datatable[,2]
datatable[2,]
datatable[ , c(2,3)]
datatable[c(2,3)]
datatable[ , c(2,3)]
datatable[], list(mean(x), sum(z))]
datatable[, list(mean(x), sum(z))]
datatable[, w:=z^2]
datatable
datatable[m:={tmp<(x+z); log(2(tmp+5))}]
datatable[m:={tmp<-(x+z); log(2(tmp+5))}]
datatable[m:={tmp<-(x+z); log2(tmp+5)}]
datatable[, m:={tmp<-(x+z); log2(tmp+5)}]
datatable[,m:={tmp<-(x+z); log2(tmp+5)}]
datatable
datatable[, a:=x>0]
datatable[, b:=mean(x+w), by=a]
datatable
DT <- data.table (x=sample(letters[1:3], 1E5, TRUE))
DT [, .N, by=x]
DT <- data.table(x=rep(c("a","b","C"), each=100), ynorm(300))
DT <- data.table(x=rep(c("a","b","C"), each=100), y=norm(300))
DT <- data.table(x=rep(c("a","b","C"),each=100), y=norm(300))
DT <- data.table(x=rep(c("a","b","c"),each=100), y=norm(300))
DT <- data.table(x=rep(c("a","b","c"),each=100), y=rnorm(300))
setkey[DT, x]
setkey(DT, x)
DT['a']
DT1 <- data.table(x=c('a', 'a','c'), y=1:4)
DT2 <- data.table(x=c('a', 'b','c'), y=5:9)
DT1
setkey(DT1,x)
setkey(DT2,x)
merge(DT1, DT2)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./data/communities.csv")
list.file("./data")
list.files("./data")
commune <- read.csv("/data/communities.csv")
commune <- read.csv("./data/communities.csv")
commune
str(commune)
commune$VAL
commune$VAL==24
commune[commune$VAL==24]
commune[, commune$VAL==24]
commune[commune[, commune$VAL==24]]
commune[, commune[, commune$VAL==24]]
source('C:/GitHub/datasciencecoursera/data cleaning/Week1 Quiz.R', echo=TRUE)
commune[commune$VAL==24]]
commune[commune$VAL==24]
data <- data.frame(commune)
data[data$VAL==24]
source('C:/GitHub/datasciencecoursera/data cleaning/datatable.R', echo=TRUE)
install.packages("data.table")
datatable[datatable$y=="a"]
datatable[datatable$y=="a"]
datatable[,2]
datatable[2,]
datatable[datatable$y=="a"]
datatable[datatable$y=="a"]
datatable[datatable$y=="b"]
datatable <- data.table(x=rnorm(9), y=rep(c("a","b", "c"), each=3), z=rnorm(9))
install.packages("data.table")
library(data.table)
library(data.table)
datatable <- data.table(x=rnorm(9), y=rep(c("a","b", "c"), each=3), z=rnorm(9))
datatable[datatable$y=="b"]
install.packages("data.table")
install.packages("data.table")
source('C:/GitHub/datasciencecoursera/data cleaning/Week1 Quiz.R', echo=TRUE)
data <- data.frame(commune)
data <- data.table(commune)
str(commune)
data[data$VAL==24]
data [, .N, by=VAL]
data[data$VAL==24]
commune <- read.csv("./data/communities.csv")
data <- data.table(commune)
data [, .N, by=AN]
data [, .N, by=VAL]
data[data$VAL==24]
data[data$VAL==25]
data [, .N, by="VAL"]
data[data$VAL==25]
data[data$VAL==24]
data [, .N, by=VAL]
download.file"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="./data/gas.xlsx"
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="./data/gas.xlsx")
excellent <- read.xlsx('/data/gas.xlsx')
install.packages("xlxs")
install.packages("rexcel")
install.packages("xlxs")
library(xlxs)
install.packages("rodbc")
library(RODBC)
install.packages("RODBC")
library(RODBC)
excellent <- read.xlsx('/data/gas.xlsx')
excellent <- read.xlsx('/data/gas.xlsx')
install.packages("xlsx")
library(xlsx)
excellent <- read.xlsx('/data/gas.xlsx')
excellent <- read.xlsx2('/data/gas.xlsx')
library(xlsx)
install.packages("rJava")
library(xlsx)
library(rJava)
library(xlsx)
install.packages("XLConnect")
library(XLConnect)
library(XLConnect)
install.packages("xlsx")
library(xlsx)
library(XLConnect)
install.packages("rJava")
library(rJava)
install.packages("rJava")
library(rJava)
library(rJava)
library(rJava)
library(rJava)
library(rJava)
